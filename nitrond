#!/bin/bash
# shellcheck disable=SC2034
# shellcheck disable=SC2059
#
# Copyright (C) 2022~2023 UsiFX <xprjkts@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License
#
# This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#

### Local Variables

# \e colors
BLUE='\e[1;34m'
GREEN='\e[1;32m'
PURPLE='\e[1;35m'
CYAN='\e[1;36m'
RED='\e[1;31m'
WHITE='\e[1;37m'
YELLOW='\e[01;33m'
STOCK='\e[1;0m'

PR_PREFIX="nitron_broadcast():"
grep -q "androidboot" /proc/cmdline && NITRON_LOG_DIR='/cache' || NITRON_LOG_DIR='/tmp'
PROMPT_COMMAND='sync'
HEADER_SOURCE="${PREFIX/\/usr}/usr/etc"

# Include headers
if [[ ! -f $HEADER_SOURCE/nitron_headers.sh ]]; then
	echo "missing header, $HEADER_SOURCE/nitron_headers.sh"
	exit 1
else
	source "$HEADER_SOURCE"/nitron_headers.sh
fi

printn() {
	[[ "$1" == "-n" ]] && printf "[${BLUE}*${STOCK}] $2\n"

	[[ "$1" == "-e" ]] && {
		printf "[${RED}Ã—${STOCK}] $2\n"
		exit 1
	}

	[[ "$1" == "-w" ]] && printf "[${YELLOW}!${STOCK}] $2\n"

	[[ "$1" == "-i" ]] && printf "[${CYAN}i${STOCK}] $2 \n"

	[[ "$1" == "-l" ]] && echo "[$(date +%I:%M:%S)] $0: $PR_PREFIX $2" >>"$NITRON_LOG_DIR"/nitron.log
}

writen() {
	[[ ! -f "$1" ]] && {
		echo "[$(date +%I:%M:%S)] $0: $1: not found, skipping..." >> "$NITRON_LOG_DIR"/nitron.log
		return 1
	}

	# Make file writable
	chmod +w "$1" 2>/dev/null

	# Write new value, bail out if it fail
	if ! echo "$2" > "$1" 2>/dev/null; then
		echo "[$(date +%I:%M:%S)] $0: $1: failed to change node" >> "$NITRON_LOG_DIR"/nitron.log
		return 1
	else
		echo "[$(date +%I:%M:%S)] $0: $1: changed node[$2]" >> "$NITRON_LOG_DIR"/nitron.log
		return 0
	fi
}

__magicn_help() {
	echo "
Usage: magicn [-g|-r|-y|-h]

Options:
 -g, --green   ~ switch to user friendly tunables
 -r, --red     ~ switch to hardcore mode
 -y, --yellow  ~ switch to balance focusment
 -h, --help    ~ prints this menu
"
}

magicn() {
	PR_PREFIX="magicn():"
	set_gaming_mode() {
		resetprop ro.nitron.mode red
		writen /proc/sys/kernel/perf_cpu_time_max_percent 20
		writen /proc/sys/kernel/sched_autogroup_enabled 0
		writen /proc/sys/kernel/sched_child_runs_first 0
		writen /proc/sys/kernel/sched_tunable_scaling 0
		writen /proc/sys/kernel/sched_migration_cost_ns 5000000
		writen /proc/sys/kernel/sched_nr_migrate 128
		writen /proc/sys/kernel/sched_schedstats 0
		writen /proc/sys/kernel/printk_devkmsg off
		writen /proc/sys/vm/dirty_background_ratio 15
		writen /proc/sys/vm/dirty_ratio 30
		writen /proc/sys/vm/dirty_expire_centisecs 3000
		writen /proc/sys/vm/dirty_writeback_centisecs 3000
		writen /proc/sys/vm/page-cluster 0
		writen /proc/sys/vm/stat_interval 10
		writen /proc/sys/vm/swappiness 100
		writen /proc/sys/vm/vfs_cache_pressure 80
		writen /proc/sys/net/ipv4/tcp_ecn 1
		writen /proc/sys/net/ipv4/tcp_fastopen 3
		writen /proc/sys/net/ipv4/tcp_syncookies 0
		writen /sys/module/ged/parameters/gx_game_mode 1
		writen /sys/module/ged/parameters/gx_force_cpu_boost 1
		writen /sys/module/ged/parameters/boost_amp 1
		writen /sys/module/ged/parameters/boost_extra 1
		writen /sys/module/ged/parameters/boost_gpu_enable 1
		writen /sys/module/ged/parameters/enable_cpu_boost 1
		writen /sys/module/ged/parameters/enable_gpu_boost 1
		writen /sys/module/ged/parameters/enable_game_self_frc_detect 1
		writen /sys/module/ged/parameters/gpu_idle 0
		writen /proc/cpufreq/cpufreq_power_mode 3
		writen /proc/cpufreq/cpufreq_cci_mode 1
		writen /sys/devices/system/cpu/eas/enable 0
		writen /sys/devices/system/cpu/perf/enable 1
		writen /proc/gpufreq/gpufreq_opp_freq 6969000
		writen /proc/ppm/enabled 1
		writen /proc/ppm/policy_status 1
		writen /sys/devices/system/cpu/cpufreq/policy0/scaling_governor performance
		writen /sys/devices/system/cpu/cpufreq/policy4/scaling_governor performance
		writen /sys/devices/system/cpu/cpufreq/policy6/scaling_governor performance
		writen /sys/block/mmcblk0/queue/scheduler deadline
		writen /sys/block/mmcblk1/queue/scheduler deadline
		writen /sys/block/sda/queue/scheduler deadline
		writen /sys/block/sdb/queue/scheduler deadline
		writen /sys/block/sdc/queue/scheduler deadline
		writen /proc/ppm/policy/hard_userlimit_max_cpu_freq 6969000
		writen /proc/ppm/policy/hard_userlimit_min_cpu_freq 6969000
		writen /proc/touchpanel/game_switch_enable 1
		writen /proc/touchpanel/oppo_tp_direction 1
		writen /sys/kernel/oppo_display/cabc 0
		writen /dev/cpuset/foreground/cpus 0-7
		writen /dev/cpuset/background/cpus 0-7
		writen /dev/cpuset/system-background/cpus 0-7
		writen /dev/cpuset/top-app/cpus 0-7
		writen /dev/cpuset/restricted/cpus
		writen /dev/stune/background/schedtune.util.max 1
		writen /dev/stune/background/schedtune.util.min 1
		writen /dev/stune/background/schedtune.boost 1
		writen /dev/stune/background/schedtune.prefer_idle 0
		writen /dev/stune/foreground/schedtune.util.max.effective 1
		writen /dev/stune/foreground/schedtune.util.min.effective 0
		writen /dev/stune/foreground/schedtune.util.max 1024
		writen /dev/stune/foreground/schedtune.util.min 0
		writen /dev/stune/foreground/schedtune.boost 13
		writen /dev/stune/foreground/schedtune.prefer_idle 0
		writen /dev/stune/top-app/schedtune.util.max.effective 1024
		writen /dev/stune/top-app/schedtune.util.min.effective 0
		writen /dev/stune/top-app/schedtune.util.max 1024
		writen /dev/stune/top-app/schedtune.util.min 0
		writen /dev/stune/top-app/schedtune.boost 20
		writen /dev/stune/top-app/schedtune.prefer_idle 0
		writen /dev/stune/schedtune.util.min 1024
		writen /dev/stune/schedtune.util.max 1024
		writen /dev/stune/schedtune.util.max.effective 1024
		writen /dev/stune/schedtune.util.min.effective 0
		writen /dev/stune/schedtune.boost 2
		writen /dev/stune/schedtune.prefer_idle 0
		writen /sys/module/pm_hotplug/parameters/loadl 40
		writen /sys/module/pm_hotplug/parameters/loadh 90
		writen /sys/module/pm_hotplug/parameters/loadl_scroff 50
		writen /sys/module/pm_hotplug/parameters/loadh_scroff 100
		writen /sys/module/pm_hotplug/parameters/rate 100
		writen /sys/module/pm_hotplug/parameters/rate_cpuon 400
		writen /sys/module/pm_hotplug/parameters/rate_scroff 400
		writen /sys/module/pm_hotplug/parameters/freq_cpu1on 500000
		writen /sys/devices/system/cpu/cpu0/cpufreq/smooth_target 1
		writen /sys/devices/system/cpu/cpu0/cpufreq/smooth_offset 1
		writen /sys/devices/system/cpu/cpu0/cpufreq/smooth_step 1
	}
	set_battery_mode() {
		resetprop ro.nitron.mode green
		writen /proc/sys/kernel/perf_cpu_time_max_percent 2
		writen /proc/sys/kernel/sched_autogroup_enabled 1
		writen /proc/sys/kernel/sched_child_runs_first 0
		writen /proc/sys/kernel/sched_tunable_scaling 0
		writen /proc/sys/kernel/sched_migration_cost_ns 5000000
		writen /proc/sys/kernel/sched_nr_migrate 256
		writen /proc/sys/kernel/sched_schedstats 0
		writen /proc/sys/kernel/printk_devkmsg off
		writen /proc/sys/vm/dirty_background_ratio 2
		writen /proc/sys/vm/dirty_ratio 5
		writen /proc/sys/vm/dirty_expire_centisecs 500
		writen /proc/sys/vm/dirty_writeback_centisecs 500
		writen /proc/sys/vm/page-cluster 0
		writen /proc/sys/vm/stat_interval 10
		writen /proc/sys/vm/swappiness 100
		writen /proc/sys/vm/vfs_cache_pressure 100
		writen /proc/sys/net/ipv4/tcp_ecn 1
		writen /proc/sys/net/ipv4/tcp_fastopen 3
		writen /proc/sys/net/ipv4/tcp_syncookies 0
		writen /sys/module/ged/parameters/gx_game_mode 0
		writen /sys/module/ged/parameters/gx_force_cpu_boost 0
		writen /sys/module/ged/parameters/boost_amp 0
		writen /sys/module/ged/parameters/boost_extra 0
		writen /sys/module/ged/parameters/boost_gpu_enable 0
		writen /sys/module/ged/parameters/enable_cpu_boost 0
		writen /sys/module/ged/parameters/enable_gpu_boost 0
		writen /sys/module/ged/parameters/enable_game_self_frc_detect 0
		writen /sys/module/ged/parameters/gpu_idle 100
		writen /sys/block/mmcblk0/queue/scheduler noop
		writen /sys/block/mmcblk1/queue/scheduler noop
		writen /sys/block/sda/queue/scheduler noop
		writen /sys/block/sdb/queue/scheduler noop
		writen /proc/cpufreq/cpufreq_power_mode 1
		writen /proc/cpufreq/cpufreq_cci_mode 0
		writen /sys/devices/system/cpu/eas/enable 1
		writen /sys/devices/system/cpu/perf/enable 0
		writen /proc/gpufreq/gpufreq_opp_freq 99000
		writen /proc/ppm/enabled 0
		writen /proc/ppm/policy_status 1
		writen /sys/devices/system/cpu/cpufreq/policy0/scaling_governor powersave
		writen /sys/devices/system/cpu/cpufreq/policy4/scaling_governor schedutil
		writen /sys/devices/system/cpu/cpufreq/policy6/scaling_governor schedutil
		writen /proc/ppm/policy/hard_userlimit_max_cpu_freq 998000
		writen /proc/ppm/policy/hard_userlimit_min_cpu_freq 850000
		writen /proc/touchpanel/game_switch_enable 1
		writen /proc/touchpanel/oppo_tp_direction 1
		writen /sys/kernel/oppo_display/cabc 0
		writen /dev/cpuset/foreground/cpus 0-5
		writen /dev/cpuset/background/cpus 0-7
		writen /dev/cpuset/system-background/cpus 0-7
		writen /dev/cpuset/top-app/cpus 0-7
		writen /dev/cpuset/restricted/cpus
		writen /dev/stune/background/schedtune.util.max.effective 0
		writen /dev/stune/background/schedtune.util.min.effective 0
		writen /dev/stune/background/schedtune.util.max 0
		writen /dev/stune/background/schedtune.util.min 0
		writen /dev/stune/background/schedtune.boost 0
		writen /dev/stune/background/schedtune.prefer_idle 1
		writen /dev/stune/foreground/schedtune.util.max.effective 1
		writen /dev/stune/foreground/schedtune.util.min.effective 0
		writen /dev/stune/foreground/schedtune.util.max 1
		writen /dev/stune/foreground/schedtune.util.min 0
		writen /dev/stune/foreground/schedtune.boost 0
		writen /dev/stune/foreground/schedtune.prefer_idle 1
		writen /dev/stune/top-app/schedtune.util.max.effective 0
		writen /dev/stune/top-app/schedtune.util.min.effective 0
		writen /dev/stune/top-app/schedtune.util.max 128
		writen /dev/stune/top-app/schedtune.util.min 0
		writen /dev/stune/top-app/schedtune.boost 0
		writen /dev/stune/top-app/schedtune.prefer_idle 1
		writen /dev/stune/schedtune.util.min 0
		writen /dev/stune/schedtune.util.max 512
		writen /dev/stune/schedtune.util.max.effective 512
		writen /dev/stune/schedtune.util.min.effective 0
		writen /dev/stune/schedtune.boost 0
		writen /dev/stune/schedtune.prefer_idle 1
	}
	set_balance_mode() {
		resetprop ro.nitron.mode yellow
		writen /proc/sys/kernel/perf_cpu_time_max_percent 5
		writen /proc/sys/kernel/sched_autogroup_enabled 1
		writen /proc/sys/kernel/sched_child_runs_first 1
		writen /proc/sys/kernel/sched_tunable_scaling 0
		writen /proc/sys/kernel/sched_migration_cost_ns 5000000
		writen /proc/sys/kernel/sched_nr_migrate 32
		writen /proc/sys/kernel/sched_schedstats 0
		writen /proc/sys/kernel/printk_devkmsg off
		writen /proc/sys/vm/dirty_background_ratio 10
		writen /proc/sys/vm/dirty_ratio 30
		writen /proc/sys/vm/dirty_expire_centisecs 3000
		writen /proc/sys/vm/dirty_writeback_centisecs 3000
		writen /proc/sys/vm/page-cluster 0
		writen /proc/sys/vm/stat_interval 10
		writen /proc/sys/vm/swappiness 100
		writen /proc/sys/vm/vfs_cache_pressure 100
		writen /proc/sys/net/ipv4/tcp_ecn 1
		writen /proc/sys/net/ipv4/tcp_fastopen 3
		writen /proc/sys/net/ipv4/tcp_syncookies 0
		writen /sys/module/ged/parameters/gx_game_mode 0
		writen /sys/module/ged/parameters/gx_force_cpu_boost 0
		writen /sys/module/ged/parameters/boost_amp 0
		writen /sys/module/ged/parameters/boost_extra 0
		writen /sys/module/ged/parameters/boost_gpu_enable 0
		writen /sys/module/ged/parameters/enable_cpu_boost 0
		writen /sys/module/ged/parameters/enable_gpu_boost 0
		writen /sys/module/ged/parameters/enable_game_self_frc_detect 0
		writen /sys/module/ged/parameters/gpu_idle 100
		writen /proc/cpufreq/cpufreq_power_mode 0
		writen /proc/cpufreq/cpufreq_cci_mode 0
		writen /sys/devices/system/cpu/eas/enable 2
		writen /sys/devices/system/cpu/perf/enable 0
		writen /proc/gpufreq/gpufreq_opp_freq 0
		writen /sys/block/mmcblk0/queue/scheduler cfq
		writen /sys/block/mmcblk1/queue/scheduler cfq
		writen /sys/block/sda/queue/scheduler cfq
		writen /sys/block/sdb/queue/scheduler cfq
		writen /sys/devices/system/cpu/cpufreq/policy0/scaling_governor schedutil
		writen /sys/devices/system/cpu/cpufreq/policy4/scaling_governor schedutil
		writen /sys/devices/system/cpu/cpufreq/policy6/scaling_governor schedutil
		writen /proc/ppm/policy/hard_userlimit_max_cpu_freq 2000000
		writen /proc/ppm/policy/hard_userlimit_min_cpu_freq 850000
		writen /proc/ppm/policy/hard_userlimit_max_cpu_freq 1700000
		writen /proc/ppm/policy/hard_userlimit_min_cpu_freq 500000
		writen /proc/touchpanel/game_switch_enable 1
		writen /proc/touchpanel/oppo_tp_direction 1
		writen /sys/kernel/oppo_display/cabc 1
		writen /dev/cpuset/foreground/cpus 0-7
		writen /dev/cpuset/background/cpus 0-6
		writen /dev/cpuset/system-background/cpus 0-4
		writen /dev/cpuset/top-app/cpus 0-7
		writen /dev/cpuset/restricted/cpus 0
		writen /dev/stune/background/schedtune.util.max.effective 0
		writen /dev/stune/background/schedtune.util.min.effective 0
		writen /dev/stune/background/schedtune.util.max 0
		writen /dev/stune/background/schedtune.util.min 0
		writen /dev/stune/background/schedtune.boost 0
		writen /dev/stune/foreground/schedtune.util.max.effective 1024
		writen /dev/stune/foreground/schedtune.util.min.effective 1024
		writen /dev/stune/foreground/schedtune.util.max 1024
		writen /dev/stune/foreground/schedtune.util.min 0
		writen /dev/stune/foreground/schedtune.boost 0
		writen /dev/stune/top-app/schedtune.util.max.effective 1024
		writen /dev/stune/top-app/schedtune.util.min.effective 0
		writen /dev/stune/top-app/schedtune.util.max 1024
		writen /dev/stune/top-app/schedtune.util.min 0
		writen /dev/stune/top-app/schedtune.boost 0
		writen /dev/stune/schedtune.util.min 0
		writen /dev/stune/schedtune.util.max 0
		writen /dev/stune/schedtune.util.max.effective 1024
		writen /dev/stune/schedtune.util.min.effective 0
		writen /dev/stune/schedtune.boost 0
	}

	case $* in
		"-g" | "--green")
			printn -l "--- started"
			set_battery_mode
			printn -l "--- finished"
			return $?
			;;
		"-r" | "--red")
			printn -l "--- started"
			set_gaming_mode
			printn -l "--- finished"
			return $?
			;;
		"-y" | "--yellow")
			printn -l "--- started"
			set_balance_mode
			printn -l "--- finished"
			return $?
			;;
		"-h" | "--help") __magicn_help ;;
		*)
			printn -e "unknown option $*"
			__magicn_help
			;;
	esac
}

updaten() {
	PR_PREFIX="updaten():"
	printn -n "checking connectivity..."
	if [[ "$(getprop ro.nitron.forcecheckupdate)" == "no" ]]; then
		printn -e "aborted from system variable"
		printn -l "ro.nitron.forcecheckupdate == $(getprop ro.nitron.forcecheckupdate)"
		return 1
	elif [[ "$NITRON_FORCECHECK_UPDATE" == "false" ]]; then
		printn -e "aborted from system variable"
		printn -l "NITRON_FORCECHECK_UPDATE == ${NITRON_FORCECHECK_UPDATE}"
		return 1
	else
		printn -l "pinging 8.8.8.8 ..."
		[[ "$(ping -c1 "8.8.8.8" 2>&1 && echo $?)" == "0" ]] && {
			printn -w "network unreachable"
			printn -l "failed"
			printn -l "returned with $?"
			return 1
		} || {
			printn -l "returned with $?"
			printn -i "looking for update..."
			curl -o "$NITRON_LOG_DIR/nitrond_src_cache" "https://raw.githubusercontent.com/UsiFX/OpenNitroN/main/nitrond" 2>/dev/null
			[[ "$($0 -v)" != "$($NITRON_LOG_DIR/nitrond_src_cache -v)" ]] && printn -i "version bump detection, $($0 -v) -> $($NITRON_LOG_DIR/nitrond_src_cache -v)"
			printn -w "backing up..."
			cp "$0" "$NITRON_LOG_DIR/nitrond_current"
			if [[ "$(diff "$NITRON_LOG_DIR/nitrond_current" "$NITRON_LOG_DIR/nitrond_src_cache")" ]]; then
				printn -i "updating..."
				cat "$NITRON_LOG_DIR/nitrond_src_cache" > "$0"
				printn -n "updated successfully."
			else
				printn -i "up to date."
			fi
		}
	fi
}

# Bail out if we aren't running as SU
[[ "$(id -u)" -ne "0" ]] && {
	printn -e "Please run the script as SU"
	exit 1
}

if grep -q "androidboot" /proc/cmdline; then
	printn -l "working in android platform, using resetprop algorithm..."
	resetprop ro.nitron.version 0.7.4
	[[ ! "$(resetprop ro.nitron.mode)" ]] && {
		printn -l "we are working on first use, Supplying initial mode..."
		resetprop ro.nitron.mode default
	}
else
	printn -l "working in Unknown Linux platform, using export algorithm..."
	export NITRON_FORCECHECK_UPDATE
	export NITRON_VERSION='0.7.4'
	[[ ! -e "$NITRON_MODE" ]] && {
		printn -l "we are working on first use, Supplying initial mode..."
		export NITRON_MODE='default'
	}
fi

__nitron_help() {
	echo "
Usage: nitrond [OPTION] (e.g. nitrond --update)

Options:
-sg, --set-green              ~ apply Battery mode
-sr, --set-red                ~ apply Gaming mode
-sy, --set-yellow             ~ apply Balanced mode
-sdm, --show-default-mode     ~ prints current tweaking mode
-c, --console-mode            ~ enter User-Friendly user selections
-u, --update                  ~ force update to latest
-h, --help                    ~ shows this Help menu
-v, --version                 ~ shows tool version
-d, --debug    [DEV-ONLY]     ~ run any command under debug flag
-L, --License                 ~ shows Tool License
"
}

if [[ $# -eq "0" ]]; then
	tty -s
	__nitron_help
else
	for arg in "$@"
	do
		case "${arg}" in
			"-sg" | "--set-green")
				magicn -g
				if grep -q "androidboot" /proc/cmdline; then
					printn -n "$0: current mode set to: $(getprop ro.nitron.mode)"
				else
					printn -n "$0: current mode set to: $NITRON_MODE"
				fi
				;;
			"-sr" | "--set-red")
				magicn -r
				if grep -q "androidboot" /proc/cmdline; then
					printn -n "$0: current mode set to: $(getprop ro.nitron.mode)"
				else
					printn -n "$0: current mode set to: $NITRON_MODE"
				fi
				;;
			"-sy" | "--set-yellow")
				magicn -y
				if grep -q "androidboot" /proc/cmdline; then
					printn -n "$0: current mode set to: $(getprop ro.nitron.mode)"
				else
					printn -n "$0: current mode set to: $NITRON_MODE"
				fi
				;;
			"-sdm" | "--show-default-mode")
				if grep -q "androidboot" /proc/cmdline; then
					echo -e "$0: mode: $(getprop ro.nitron.mode)"
				else
					echo -e "$0: mode: $NITRON_MODE"
				fi
				;;
			"-v" | "--version")
				if grep -q "androidboot" /proc/cmdline; then
					echo -e "nitrond $(getprop ro.nitron.version)"
				else
					echo -e "nitrond $NITRON_VERSION"
				fi
				;;
			"-c" | "--console-mode")
				if [[ ! "$(hash dialog 2>/dev/null)" ]]; then
					printn -l "dialog not found, switch: console_legacy()"
					console_legacy
				else
					console_dialog
					printn -l "--- started"
				fi
				;;
			"-L" | "--License") echo "
#
# nitronD v1.7 (An Extensive Kernel tweaker)
# Copyright (c) 2022-2023 UsiFX <xprjkts@gmail.com>
#
#			GNU GENERAL PUBLIC LICENSE
#			 Version 3, 29 June 2007
#
# Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>
# Everyone is permitted to copy and distribute verbatim copies
# of this license document, but changing it is not allowed.
#"
			;;
			"-h" | "--help") __nitron_help ;;
			"-u" | "--update") updaten ;;
			"-d" | "--debug")
				set -x
				printn -w "execution under debug, please provide arguments to debug"
			;;
			*) printn -e "unknown option $*, check 'nitrond --help'." ;;
		esac
	done
fi
